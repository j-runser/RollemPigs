/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg_rollemPigs;

import dicetestpackage.DieLabel;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author josephrunser
 */
public class Frame_rollemPigs extends javax.swing.JFrame {
    
    private final DieLabel dieOne;
    private final DieLabel dieTwo;
    
    private final Player playerOne;
    private final Player playerTwo;

    /**
     * Creates new form frame_rollemPigs
     */
    public Frame_rollemPigs() {
        initComponents();
        
        dieOne = new DieLabel();
        dieTwo = new DieLabel();
        
        // Initialize each player and get/set the player names.
        String name;
        name = JOptionPane.showInputDialog("What is your name player one?");
        playerOne = new Player(name);
        name = JOptionPane.showInputDialog("What is your name player two?");
        playerTwo = new Player(name);
        
        // Sets the name lables
        lbl_playerOneName.setText(playerOne.getName());
        lbl_playerTwoName.setText(playerTwo.getName());
        
        // This may be redundant for playerTwo but it sets the players to the proper
        // turn status.
        playerOne.setTurnStatusTrue();
        playerTwo.setTurnStatusFalse();
        
        // Make sue the dice are not held, keeps people from cheating.
        dieOne.holdDie(false);
        dieTwo.holdDie(false);
        
        // Adds the dice to the panel that should be holding them.
        panel_dice.add(dieOne);
        panel_dice.add(dieTwo);
        
        // Makes the forground red the playerOne, the current player.
        lbl_playerOneName.setForeground(Color.red);
        lbl_playerOneScore.setForeground(Color.red);
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_playerOneName = new javax.swing.JLabel();
        lbl_playerOneScore = new javax.swing.JLabel();
        lbl_playerTwoName = new javax.swing.JLabel();
        lbl_playerTwoScore = new javax.swing.JLabel();
        panel_dice = new javax.swing.JPanel();
        lbl_gameText = new javax.swing.JLabel();
        btn_roll = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_playerOneName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lbl_playerOneName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_playerOneName.setText("Player One");

        lbl_playerOneScore.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lbl_playerOneScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_playerOneScore.setText("0");

        lbl_playerTwoName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lbl_playerTwoName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_playerTwoName.setText("Player Two");

        lbl_playerTwoScore.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lbl_playerTwoScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_playerTwoScore.setText("0");

        panel_dice.setLayout(new java.awt.GridLayout(1, 2));

        lbl_gameText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_gameText.setText("Welcome to Roll'em Pigs!");

        btn_roll.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btn_roll.setText("Roll");
        btn_roll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rollActionPerformed(evt);
            }
        });

        btn_stop.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        btn_stop.setText("Stop");
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_gameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_playerOneName, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(lbl_playerOneScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_dice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_playerTwoName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_playerTwoScore, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_roll, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lbl_playerOneName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_playerOneScore))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lbl_playerTwoName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_playerTwoScore))
                    .addComponent(panel_dice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_gameText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_roll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_stop, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_rollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rollActionPerformed
        
        dieOne.holdDie(false);
        dieTwo.holdDie(false);
        
        int turnScore = 0;
        
        // Run playerOne turn
        if(playerOne.getTurnStatus()) {
            
            // Roll the dice
            turnScore = playerOne.rollDie(dieOne, dieTwo);
            
            // Action if two ones are rolled.
            if(playerOne.isGameScoreLost()) { 
                
                // Switch to player 2
                playerOne.setTurnStatusTrue();
                playerTwo.setTurnStatusFalse();
                
                lbl_gameText.setText("Ouch, better luck next time. It is now your"
                        + "turn " + playerTwo.getName());
                lbl_playerOneScore.setText(playerOne.getGameScore() + "");
                
                playerTwoTurnLabelColor();
                
            } else if(playerOne.isTurnScoreLost()) { 
                
                // Switch to player 2
                playerOne.setTurnStatusFalse();
                playerTwo.setTurnStatusTrue();
                
                lbl_gameText.setText("Now thats just nasty. It is now your turn " + 
                        playerTwo.getName());
                lbl_playerOneScore.setText(playerOne.getGameScore() + "");
                
                playerTwoTurnLabelColor();
                
            } else {
                
                lbl_gameText.setText(playerOne.getName() + " has earned " + 
                        turnScore + " points on this turn. Would you like to roll"
                                + " again?");
                
            }
            
        }
        // Run playerTwo turn
        else if(playerTwo.getTurnStatus()) {
            
            turnScore = playerTwo.rollDie(dieOne, dieTwo);
            
            if(playerTwo.isGameScoreLost()) { 
                
                playerTwo.setTurnStatusFalse();
                playerOne.setTurnStatusTrue();
                
                lbl_gameText.setText("Ouch, better luck next time. It is now your "
                        + "turn " + playerOne.getName());
                lbl_playerTwoScore.setText(playerTwo.getGameScore() + "");
                
                playerOneTurnLabelColor();
                
            } else if(playerTwo.isTurnScoreLost()) { 
                
                playerTwo.setTurnStatusFalse();
                playerOne.setTurnStatusTrue();
                
                lbl_gameText.setText("Now thats just nasty. It is now your turn " +
                        playerOne.getName());
                lbl_playerTwoScore.setText(playerTwo.getGameScore() + "");
                
                playerOneTurnLabelColor();
                
            } else {
                
                lbl_gameText.setText(playerTwo.getName() + " has earned " + 
                        turnScore + " points on this turn. Would you like to roll"
                                + " again?");
                
            }
            
        }
        
        checkForWin();
    }//GEN-LAST:event_btn_rollActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed

        // playerOne end turn
        if(playerOne.getTurnStatus() && playerOne.addTurnScoreToGameScore()) {

            playerOne.setTurnStatusFalse();
            playerTwo.setTurnStatusTrue();
            
            lbl_playerOneScore.setText(playerOne.getGameScore() + "");
            lbl_gameText.setText("It is now your turn " + playerTwo.getName());
            
            playerTwoTurnLabelColor();
            
        }
        // playerTwo end turn
        else if(playerTwo.getTurnStatus() && playerTwo.addTurnScoreToGameScore()) {
            
            playerTwo.setTurnStatusFalse();
            playerOne.setTurnStatusTrue();
            
            lbl_playerTwoScore.setText(playerTwo.getGameScore() + "");
            lbl_gameText.setText("It is now your turn " + playerOne.getName());
            
            playerOneTurnLabelColor();
        }
        
        checkForWin();

    }//GEN-LAST:event_btn_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_rollemPigs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_rollemPigs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_rollemPigs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_rollemPigs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_rollemPigs().setVisible(true);
            }
        });
    }
    
    // Changes the colors of lbl_playerTwoScore/Name to red and the corresponding
    // playerOne labels to black
    private void playerOneTurnLabelColor() {
        
        lbl_playerTwoScore.setForeground(Color.BLACK);
        lbl_playerTwoName.setForeground(Color.BLACK);
            
        lbl_playerOneScore.setForeground(Color.red);
        lbl_playerOneName.setForeground(Color.red);
        
    }
    
    // Changes the colors of lbl_playerOneScore/Name to red and the corresponding
    // playerTwo labels to black
    private void playerTwoTurnLabelColor() {
        
        lbl_playerOneScore.setForeground(Color.BLACK);
        lbl_playerOneName.setForeground(Color.BLACK);
            
        lbl_playerTwoScore.setForeground(Color.red);
        lbl_playerTwoName.setForeground(Color.red);
        
    }
    
    // Checks to see if either player has won the game and if it is the case makes
    // a dialog box that displays the final scores and the winner.
    private void checkForWin() {
        // If playerOne wins
        if(playerOne.hasWon()) {
            
            String endGame = "Player '" + playerOne.getName() + "' wins!\n"
                    + "Would you like to play another round?";
            String another = "Play Again";
            
            // Dialog box
            int continuePlay = JOptionPane.showConfirmDialog(
                    this, endGame, another, JOptionPane.YES_NO_OPTION);
            
            // Dialog box options
            if(continuePlay == JOptionPane.YES_OPTION) {
                
                playerOne.reset();
                playerTwo.reset();
                
                lbl_playerOneScore.setText(playerOne.getGameScore() + "");
                lbl_playerTwoScore.setText(playerTwo.getGameScore() + "");
                
                playerTwo.setTurnStatusTrue();
                playerOne.setTurnStatusFalse();
                
                playerTwoTurnLabelColor();
                
            } else { System.exit(0); }
        }
        // If playerTwo wins
        else if(playerTwo.hasWon()) {
            
            String endGame = "Player '" + playerTwo.getName() + "' wins.\n"
                    + "Would you like to play another round?";
            String another = "Play Again";
            
            // Dialog box
            int continuePlay = JOptionPane.showConfirmDialog(
                    this, endGame, another, JOptionPane.YES_NO_OPTION);
            
            // Dialog box options
            if(continuePlay == JOptionPane.YES_OPTION) {
                
                playerTwo.reset();
                playerOne.reset();
                
                lbl_playerOneScore.setText(playerOne.getGameScore() + "");
                lbl_playerTwoScore.setText(playerTwo.getGameScore() + "");
                
                playerOne.setTurnStatusFalse();
                playerTwo.setTurnStatusTrue();
                
                playerOneTurnLabelColor();
                
            } else { System.exit(0); }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_roll;
    private javax.swing.JButton btn_stop;
    private javax.swing.JLabel lbl_gameText;
    private javax.swing.JLabel lbl_playerOneName;
    private javax.swing.JLabel lbl_playerOneScore;
    private javax.swing.JLabel lbl_playerTwoName;
    private javax.swing.JLabel lbl_playerTwoScore;
    private javax.swing.JPanel panel_dice;
    // End of variables declaration//GEN-END:variables
}
